{
  "id": "m2-l9-oop-encapsulation",
  "title": "OOP Encapsulation",
  "sections": [
    {
      "type": "read",
      "contentMarkdown": "Encapsulation restricts access to internal data and methods."
    },
    {
      "type": "example",
      "starterCode": "class Person:\n    def __init__(self, name):\n        self.__name = name  # private\n    def get_name(self):\n        return self.__name\n\np = Person('Alice')\nprint(p.get_name())",
      "explainMarkdown": "Double underscore makes attributes private."
    },
    {
      "type": "exercise",
      "promptMarkdown": "Create a BankAccount class with a private balance and a method to get it.",
      "starterCode": "# TODO: BankAccount",
      "tests": [
        { "type": "includes", "match": "100" }
      ],
      "hints": ["Use __balance", "Provide getter method"],
      "solutionCode": "class BankAccount:\n    def __init__(self, balance):\n        self.__balance = balance\n    def get_balance(self):\n        return self.__balance\nacct = BankAccount(100)\nprint(acct.get_balance())"
    },
    {
      "type": "quiz",
      "question": "What prefix makes attributes private?",
      "choices": ["_", "__", "private"],
      "answerIndex": 1,
      "explainMarkdown": "Double underscore is used for name mangling."
    }
  ]
}
